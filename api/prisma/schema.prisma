

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(cuid())
  email     String    @unique
  password  String?
  workouts  Workout[]
  calorieGoal  Int?
  proteinGoal  Int?
  mealEntries  MealEntry[]
  createdFoods Food[]
}

model Workout {
  id        String     @id @default(cuid())
  name      String
  date      DateTime
  user      User       @relation(fields: [userId], references: [id])
  userId    String
  exercises Exercise[]
}

model Exercise {
  id        String   @id @default(cuid())
  name      String
  sets      Int
  reps      Int
  weight    Float
  workout   Workout  @relation(fields: [workoutId], references: [id])
  workoutId String
}

model Food {
  id          String   @id @default(cuid())
  name        String
  calories    Int      // Per serving
  protein     Int      // Per serving, in grams
  servingSize String   // e.g., "100g", "1 cup"
  
  // Relation to the user who created it
  creator     User     @relation(fields: [creatorId], references: [id])
  creatorId   String

  mealEntries MealEntry[] // A food can be in many meal entries
  createdAt   DateTime @default(now())
}

// --- ADD THIS NEW MODEL ---
// This is an actual log of a meal
model MealEntry {
  id        String   @id @default(cuid())
  date      DateTime // The date/time the meal was eaten
  mealType  String   // "Breakfast", "Lunch", "Dinner", "Snack"
  quantity  Float    // e.g., 1.5 servings
  
  // We'll store the calculated values at log time
  calories  Int
  protein   Int

  // Relation to the user who ate it
  user      User     @relation(fields: [userId], references: [id])
  userId    String

  // Relation to the food that was eaten
  food      Food     @relation(fields: [foodId], references: [id])
  foodId    String

  createdAt DateTime @default(now())
}